# Generated by Django 5.0.2 on 2025-09-22 04:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('jira', 'Jira'), ('github', 'GitHub'), ('slack', 'Slack'), ('teams', 'Microsoft Teams'), ('gitlab', 'GitLab'), ('bitbucket', 'Bitbucket')], max_length=20)),
                ('name', models.CharField(max_length=100)),
                ('api_key', models.CharField(blank=True, max_length=500)),
                ('api_secret', models.CharField(blank=True, max_length=500)),
                ('base_url', models.URLField(blank=True)),
                ('webhook_url', models.URLField(blank=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('error', 'Error'), ('testing', 'Testing')], default='inactive', max_length=20)),
                ('is_active', models.BooleanField(default=False)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('sync_interval', models.IntegerField(default=300)),
                ('error_message', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'External Integration',
                'verbose_name_plural': 'External Integrations',
                'db_table': 'integrations_external_integration',
                'unique_together': {('platform', 'name')},
            },
        ),
        migrations.CreateModel(
            name='GitHubIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repository', models.CharField(max_length=200)),
                ('owner', models.CharField(max_length=100)),
                ('branch', models.CharField(default='main', max_length=100)),
                ('webhook_secret', models.CharField(blank=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='github_integration', to='integrations.externalintegration')),
            ],
            options={
                'verbose_name': 'GitHub Integration',
                'verbose_name_plural': 'GitHub Integrations',
                'db_table': 'integrations_github_integration',
            },
        ),
        migrations.CreateModel(
            name='GitHubRepository',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('private', models.BooleanField(default=False)),
                ('default_branch', models.CharField(default='main', max_length=50)),
                ('language', models.CharField(blank=True, max_length=50)),
                ('stars_count', models.IntegerField(default=0)),
                ('forks_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repositories', to='integrations.githubintegration')),
            ],
            options={
                'db_table': 'integrations_github_repository',
                'unique_together': {('integration', 'full_name')},
            },
        ),
        migrations.CreateModel(
            name='IntegrationSyncLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sync_type', models.CharField(choices=[('tickets', 'Tickets Sync'), ('pull_requests', 'Pull Requests Sync'), ('commits', 'Commits Sync'), ('users', 'Users Sync'), ('projects', 'Projects Sync')], max_length=20)),
                ('status', models.CharField(choices=[('success', 'Success'), ('failed', 'Failed'), ('partial', 'Partial Success')], max_length=20)),
                ('items_processed', models.IntegerField(default=0)),
                ('items_created', models.IntegerField(default=0)),
                ('items_updated', models.IntegerField(default=0)),
                ('items_failed', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('sync_duration', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_logs', to='integrations.externalintegration')),
            ],
            options={
                'verbose_name': 'Integration Sync Log',
                'verbose_name_plural': 'Integration Sync Logs',
                'db_table': 'integrations_sync_log',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='JiraIntegration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_key', models.CharField(max_length=20)),
                ('username', models.CharField(max_length=100)),
                ('board_id', models.IntegerField(blank=True, null=True)),
                ('sprint_field', models.CharField(default='Sprint', max_length=50)),
                ('story_points_field', models.CharField(default='Story Points', max_length=50)),
                ('epic_field', models.CharField(default='Epic Link', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='jira_integration', to='integrations.externalintegration')),
            ],
            options={
                'verbose_name': 'Jira Integration',
                'verbose_name_plural': 'Jira Integrations',
                'db_table': 'integrations_jira_integration',
            },
        ),
        migrations.CreateModel(
            name='ExternalPullRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(max_length=20)),
                ('author', models.CharField(max_length=100)),
                ('source_branch', models.CharField(max_length=100)),
                ('target_branch', models.CharField(max_length=100)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('merged_date', models.DateTimeField(blank=True, null=True)),
                ('review_status', models.CharField(default='pending', max_length=20)),
                ('files_changed', models.IntegerField(default=0)),
                ('additions', models.IntegerField(default=0)),
                ('deletions', models.IntegerField(default=0)),
                ('labels', models.JSONField(blank=True, default=list)),
                ('last_synced', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_pull_requests', to='integrations.externalintegration')),
            ],
            options={
                'verbose_name': 'External Pull Request',
                'verbose_name_plural': 'External Pull Requests',
                'db_table': 'integrations_external_pull_request',
                'unique_together': {('integration', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='ExternalTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(max_length=50)),
                ('priority', models.CharField(blank=True, max_length=20)),
                ('assignee', models.CharField(blank=True, max_length=100)),
                ('reporter', models.CharField(blank=True, max_length=100)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('updated_date', models.DateTimeField(blank=True, null=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('labels', models.JSONField(blank=True, default=list)),
                ('custom_fields', models.JSONField(blank=True, default=dict)),
                ('last_synced', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='external_tickets', to='integrations.externalintegration')),
            ],
            options={
                'verbose_name': 'External Ticket',
                'verbose_name_plural': 'External Tickets',
                'db_table': 'integrations_external_ticket',
                'unique_together': {('integration', 'external_id')},
            },
        ),
        migrations.CreateModel(
            name='WorkItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_id', models.CharField(max_length=100)),
                ('item_type', models.CharField(choices=[('issue', 'Issue'), ('pull_request', 'Pull Request'), ('bug', 'Bug'), ('feature', 'Feature'), ('task', 'Task'), ('epic', 'Epic')], max_length=20)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('open', 'Open'), ('in_progress', 'In Progress'), ('closed', 'Closed'), ('resolved', 'Resolved')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('assignee', models.CharField(blank=True, max_length=100)),
                ('reporter', models.CharField(blank=True, max_length=100)),
                ('labels', models.JSONField(blank=True, default=list)),
                ('external_url', models.URLField(blank=True)),
                ('created_at_source', models.DateTimeField(blank=True, null=True)),
                ('updated_at_source', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('integration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_items', to='integrations.externalintegration')),
                ('repository', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='integrations.githubrepository')),
            ],
            options={
                'db_table': 'integrations_work_item',
                'unique_together': {('integration', 'external_id')},
            },
        ),
    ]
